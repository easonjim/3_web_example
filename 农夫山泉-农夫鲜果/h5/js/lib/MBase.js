/*个人习惯用log代替console.log来进行简写*/
!(function (window) { if (window.log) { return } var slice = [].slice, con = window.console; function log(type, args) { var vs = slice.call(args); if (con) { con[type].apply ? con[type].apply(con, vs) : con[type](type + ":", vs) } } window.log = function () { log("log", arguments) } }(window));
/**
 * 事件发送者类 模仿AS
 * cagoeAG.event.CEventDispatcher类 
 * cagoeAG.Eventer实例对象
 * on   等同addEventListener
 * off  等同removeEventListener
 * ds   等同dispatchEvent  
 * addEventListener             //监听事件
 * removeEventListener          //删除指定类型事件绑定的方法
 * dispatchEvent                //发送事件
 * removeAllEventListeners      //删除所有事件
 * removeEventListenerByType    //删除指定类型事件绑定
 *        
 */
!(function (window) { var CEventDispatcher = function () { var _self = this; this._eventMap = {}; this.addEventListener = function (type, listener) { var map = this._eventMap[type]; if (map == null || map == undefined) { map = this._eventMap[type] = [] } if (map.indexOf(listener) == -1) { map.push(listener); return true } return false }; this.removeEventListener = function (type, listener) { if (arguments.length == 1) { return this.removeEventListenerByType(type) } var map = this._eventMap[type]; if (map == null || map == undefined) { return false } for (var i = 0; i < map.length; i++) { var li = map[i]; if (li === listener) { map.splice(i, 1); if (map.length == 0) { delete this._eventMap[type] } return true } } return false }; this.removeEventListenerByType = function (type) { var map = this._eventMap[type]; if (map != null && map != undefined) { delete this._eventMap[type]; return true } return false }; this.removeAllEventListeners = function () { this._eventMap = {} }; this.dispatchEvent = function (event) { if (typeof event == "string") { event = { type: event } } var map = this._eventMap[event.type]; if (map == null || map == undefined) { return false } if (!event.target) { event.target = this } map = map.slice(); for (var i = 0; i < map.length; i++) { var listener = map[i]; if (typeof (listener) == "function") { listener.call(this, event) } } return true }; this.hasEventListener = function (type) { var map = this._eventMap[type]; return (map != null && map != undefined) && map.length > 0 }; this.on = this.addEventListener; this.off = this.removeEventListener; this.ds = this.dispatchEvent }; window.cagoeAG = window.cagoeAG || {}; window.cagoeAG.event = window.cagoeAG.event || {}; window.cagoeAG.event.CEventDispatcher = CEventDispatcher; window.cagoeAG.Eventer = new CEventDispatcher() }(window)); function echo(stringA, stringB) { var hello = "你好"; alert("hello world") };
/**
 * cagoeAG.Extend方法可以，用对Obeject对象附值的方式，进行类扩展实现
 */
!(function (window) { window.cagoeAG = window.cagoeAG || {}; if (window.cagoeAG.Extend) { return; } window.cagoeAG.Extend = function (target, source, cover) { for (key in source) { if (cover) { target[key] = source[key] } else { if (source[key] !== undefined && target[key] === undefined) { target[key] = source[key] } } } return target } }(window));
/*jstween  0.5.0 https://github.com/shrekshrek/jstween*/
!function(t){var n="object"==typeof self&&self.self==self&&self||"object"==typeof global&&global.global==global&&global;"function"==typeof define&&define.amd?define(["exports"],function(e){n.JT=t(n,e)}):"undefined"!=typeof exports?t(n,exports):n.JT=t(n,{})}(function(t,n){function e(t,n){for(var e in n)t[e]=n[e]}function a(t,n){if("function"==typeof t)n.call(t,0,t);else if(void 0===t.length)n.call(t,0,t);else for(var e=0;e<t.length;e++)n.call(t[e],e,t[e])}function i(t){return t.replace(/([A-Z])/g,"-$1").toLowerCase()}function r(t){return t.replace(/\b(\w)|\s(\w)/g,function(t){return t.toUpperCase()})}function o(t){return t?S+r(t):S}function s(t){if(!t)throw"target is undefined, can't tween!!!";return"string"==typeof t?"undefined"==typeof document?t:document.querySelectorAll?document.querySelectorAll(t):document.getElementById("#"===t.charAt(0)?t.substr(1):t):t}function u(t,n){return void 0!==t._jt_obj[n]?n:void 0!==t.style[n]?n:(n=o(n),void 0!==t.style[n]?n:void 0)}function l(t,n,e){if(n instanceof Array){for(var a in n)n[a]=h(t,n[a]);e?n.push(t):n.unshift(t)}else n=h(t,n);return n}function h(t,n){switch(typeof n){case"string":var e=n.substr(0,2),a=parseFloat(n.substr(2));switch(e){case"+=":n=t+a;break;case"-=":n=t-a}}return n}function c(t,n){switch(t){case"opacity":case"fontWeight":case"lineHeight":case"zoom":return n;default:return"number"==typeof n?Math.round(n)+"px":n}}function f(t){void 0==t._jt_obj&&(t._jt_obj={x:0,y:0,z:0,rotationX:0,rotationY:0,rotationZ:0,scaleX:1,scaleY:1,scaleZ:1})}function p(t,n){switch(n){case"x":case"y":case"z":case"rotationX":case"rotationY":case"rotationZ":case"scaleX":case"scaleY":case"scaleZ":return t._jt_obj[n];default:return d(t,n)}}function d(t,n){if(document.defaultView&&document.defaultView.getComputedStyle){var e=i(n),a=document.defaultView.getComputedStyle(t,"");return a&&a.getPropertyValue(e)}return t.currentStyle?t.currentStyle[n]:null}function v(t,n,e){switch(n){case"x":case"y":case"z":case"rotationX":case"rotationY":case"rotationZ":case"scaleX":case"scaleY":case"scaleZ":return t._jt_obj[n]=e,!0;default:return m(t,n,e),!1}}function m(t,n,e){t.style[n]=c(n,e)}function y(t){return"object"==typeof t&&1===t.nodeType}function g(){D=!0;var t,n,e=z.length,a=F.length;if(0===e&&0===a)return void(D=!1);var i=R();for(t=e-1;t>=0;t--)if(z[t]&&!z[t]._update(i)){var r=z.splice(t,1)[0];r.onUpdate&&r.onUpdate.apply(r,r.onUpdateParams),r.onEnd&&r.onEnd.apply(r,r.onEndParams),r.target=null}for(n=a-1;n>=0;n--)if(F[n]&&!F[n]._update(i)){var o=F.splice(n,1)[0];o.onEnd&&o.onEnd.apply(o,o.onEndParams)}U(g)}function _(){this.initialize.apply(this,arguments)}function j(t,n){var e=s(t),i=z.length;a(e,function(t,e){for(var a=i-1;a>=0;a--){var r=z[a];r.target===e&&r[n]()}})}function P(t){for(var n=z.length,e=n-1;e>=0;e--){var a=z[e];a[t]()}}function M(){this.initialize.apply(this,arguments)}function w(t,n){var e=t,i=F.length;a(e,function(t,e){for(var a=i-1;a>=0;a--){var r=F[a];r.onEnd===e&&r[n]()}})}function b(t){for(var n=F.length,e=n-1;e>=0;e--){var a=F[e];a[t]()}}function T(t){t.bezier&&(E(t,t.bezier),t.interpolation=O,delete t.bezier),t.through&&(E(t,t.through),t.interpolation=x,delete t.through),t.linear&&(E(t,t.linear),t.interpolation=I,delete t.linear)}function E(t,n){for(var e in n)for(var a in n[e])0==e?t[a]=[n[e][a]]:t[a].push(n[e][a])}function I(t,n){var e=t.length-1,a=e*n,i=Math.floor(a),r=Z.Linear;return 0>n?r(t[0],t[1],a):n>1?r(t[e],t[e-1],e-a):r(t[i],t[i+1>e?e:i+1],a-i)}function O(t,n){var e,a=0,i=t.length-1,r=Math.pow,o=Z.Bernstein;for(e=0;i>=e;e++)a+=r(1-n,i-e)*r(n,e)*t[e]*o(i,e);return a}function x(t,n){var e=t.length-1,a=e*n,i=Math.floor(a),r=Z.Through;return t[0]===t[e]?(0>n&&(i=Math.floor(a=e*(1+n))),r(t[(i-1+e)%e],t[i],t[(i+1)%e],t[(i+2)%e],a-i)):0>n?t[0]-(r(t[0],t[0],t[1],t[1],-a)-t[0]):n>1?t[e]-(r(t[e],t[e],t[e-1],t[e-1],a-e)-t[e]):r(t[i?i-1:0],t[i],t[i+1>e?e:i+1],t[i+2>e?e:i+2],a-i)}Date.now=Date.now||function(){return(new Date).getTime()};var A=Date.now(),R=function(){return Date.now()-A},S="";!function(){var t=document.createElement("div"),n=["Webkit","Moz","Ms","O"];for(var e in n)if(n[e]+"Transform"in t.style){S=n[e];break}}();var U=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){window.setTimeout(t,1e3/60)},z=[],D=!1;e(_.prototype,{initialize:function(t,e,a,i,r){this.fromVars=a,this.curVars={},this.toVars=i,this.target=t,this.duration=1e3*Math.max(e,0),this.ease=i.ease||n.Linear.None,this.delay=1e3*Math.max(i.delay||0,0),this.yoyo=i.yoyo||!1,this.repeat=this.curRepeat=Math.floor(i.repeat||0),this.repeatDelay=1e3*Math.max(i.repeatDelay||0,0),this.onStart=i.onStart||null,this.onStartParams=i.onStartParams||[],this.onRepeat=i.onRepeat||null,this.onRepeatParams=i.onRepeatParams||[],this.onEnd=i.onEnd||null,this.onEndParams=i.onEndParams||[],this.onUpdate=i.onUpdate||null,this.onUpdateParams=i.onUpdateParams||[],this.isPlaying=i.isPlaying||!0,this.interpolation=i.interpolation||null,this.isReverse=!1,this.isDom=r,this.curTime=0,this.lastTime=R(),this.isStart=!1,this.startTime=this.delay,this.endTime=this.startTime+this.repeatDelay+this.duration,0!=this.delay&&(this._updateProp(),this.onUpdate&&this.onUpdate.apply(this,this.onUpdateParams)),z.unshift(this),D?this._update(this.lastTime):g()},_update:function(t){var n=t-this.lastTime;if(this.lastTime=t,!this.isPlaying)return!0;if(n%=this.duration,this.curTime+=n,this.curTime<this.startTime)return!0;if(this.isStart||(this.isStart=!0,this.onStart&&this.onStart.apply(this,this.onStartParams)),this.curTime<this.startTime+this.repeatDelay)return!0;if(this.curTime<this.endTime)this._updateProp(),this.onUpdate&&this.onUpdate.apply(this,this.onUpdateParams);else{if(0==this.curRepeat)return this._updateProp(),!1;this.yoyo&&(this.isReverse=!this.isReverse),0==this.repeatDelay?(this.curTime=this.curTime-this.duration-this.repeatDelay,this._updateProp()):(this._updateProp(),this.curTime=this.curTime-this.duration-this.repeatDelay),this.onUpdate&&this.onUpdate.apply(this,this.onUpdateParams),this.onRepeat&&this.onRepeat.apply(this,this.onRepeatParams),this.curRepeat>0&&this.curRepeat--}return!0},_updateProp:function(){var t=0==this.duration?1:(this.curTime-this.startTime-this.repeatDelay)/this.duration;t=Math.max(0,Math.min(1,t)),this.isReverse&&(t=1-t);var n=this.ease(t),e=!1;for(var a in this.fromVars){var i,r=this.fromVars[a],s=this.toVars[a]||0;i=s instanceof Array?this.interpolation(s,n):r instanceof Array?this.interpolation(r,n):r+(s-r)*n,i=Math.round(100*i)/100,this.curVars[a]=i,this.isDom?v(this.target,a,i)&&(e=!0):this.target[a]=i}e&&(this.target.style[o("transform")]="translate3d("+this.target._jt_obj.x+"px,"+this.target._jt_obj.y+"px,"+this.target._jt_obj.z+"px) rotateX("+this.target._jt_obj.rotationX%360+"deg) rotateY("+this.target._jt_obj.rotationY%360+"deg) rotateZ("+this.target._jt_obj.rotationZ%360+"deg) scale3d("+this.target._jt_obj.scaleX+", "+this.target._jt_obj.scaleY+", "+this.target._jt_obj.scaleZ+") ")},play:function(){this.target&&(this.isPlaying=!0)},pause:function(){this.target&&(this.isPlaying=!1)},destroy:function(t){if(this.target){var n=z.indexOf(this);if(-1!==n){var e=z.splice(n,1)[0];t&&e.onEnd&&e.onEnd.apply(e,e.onEndParams),this.target=null}}}}),e(n,{get:function(t,n){var e=s(t);if(void 0!==e.length&&(e=e[0]),y(e)){f(e);var a=u(e,n);return a?p(e,a):null}return e[n]},set:function(t,n){var e=s(t);a(e,function(t,e){if(y(e)){f(e);var a=!1;for(var i in n){var r=u(e,i);if(r){var s=l(parseFloat(p(e,r)),n[i]);v(e,r,s)&&(a=!0)}}a&&(e.style[o("transform")]="translate3d("+e._jt_obj.x+"px,"+e._jt_obj.y+"px,"+e._jt_obj.z+"px) rotateX("+e._jt_obj.rotationX%360+"deg) rotateY("+e._jt_obj.rotationY%360+"deg) rotateZ("+e._jt_obj.rotationZ%360+"deg) scale3d("+e._jt_obj.scaleX+", "+e._jt_obj.scaleY+", "+e._jt_obj.scaleZ+") ")}else for(var h in n)e[h]=l(e[h],n[h])})},fromTo:function(t,n,e,i){T(i);var r=s(t),o=[];return a(r,function(t,a){var r={},s={},h=y(a);if(h){f(a);for(var c in i){var d=u(a,c);if(d){var v=parseFloat(p(a,d));r[d]=l(v,e[c]),s[d]=l(v,i[c])}else s[c]=i[c]}}else for(var c in i)if(void 0!==a[c]){var v=parseFloat(a[c]);r[c]=l(v,e[c]),s[c]=l(v,i[c])}else s[c]=i[c];var m=new _(a,n,r,s,h);o.push(m)}),1==o.length?o[0]:o},from:function(t,n,e){T(e);var i=s(t),r=[];return a(i,function(t,a){var i={},o={},s=y(a);if(s){f(a);for(var h in e){var c=u(a,h);if(c){var d=parseFloat(p(a,c));i[c]=l(d,e[h],!0),o[c]=d}else o[h]=e[h]}}else for(var h in e)if(void 0!==a[h]){var d=parseFloat(a[h]);i[h]=l(d,e[h]),o[h]=d}else o[h]=e[h];var v=new _(a,n,i,o,s);r.push(v)}),1==r.length?r[0]:r},to:function(t,n,e){T(e);var i=s(t),r=[];return a(i,function(t,a){var i={},o={},s=y(a);if(s){f(a);for(var h in e){var c=u(a,h);if(c){var d=parseFloat(p(a,c));i[c]=d,o[c]=l(d,e[h])}else o[h]=e[h]}}else for(var h in e)if(void 0!==a[h]){var d=parseFloat(a[h]);i[h]=d,o[h]=l(d,e[h])}else o[h]=e[h];var v=new _(a,n,i,o,s);r.push(v)}),1==r.length?r[0]:r},kill:function(t,n){var e=s(t);a(e,function(t,e){for(var a=z.length,i=a-1;i>=0;i--){var r=z[i];r.target===e&&(z.splice(i,1),n&&r.onEnd&&r.onEnd.apply(r,r.onEndParams),r.target=null)}})},killAll:function(t){if(!t)return void(z=[]);for(var n=z.length,e=n-1;e>=0;e--){var a=z.splice(e,1);t&&a.onEnd&&a.onEnd.apply(a,a.onEndParams),a.target=null}},play:function(t){j(t,"play")},playAll:function(){P("play")},pause:function(t){j(t,"pause")},pauseAll:function(){P("pause")}});var F=[];e(M.prototype,{initialize:function(t,n,e,a){this.delay=1e3*t,this.onEnd=n||null,this.onEndParams=e||[],this.curTime=0,this.lastTime=R(),this.endTime=this.delay,this.isPlaying=a||!0,F.unshift(this),D?this._update(this.lastTime):g()},_update:function(t){var n=t-this.lastTime;return this.lastTime=t,this.isPlaying?(this.curTime+=n,this.curTime<this.endTime?!0:!1):!0},play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},destroy:function(t){var n=F.indexOf(this);if(-1!==n){var e=F.splice(n,1)[0];t&&e.onEnd&&e.onEnd.apply(e,e.onEndParams)}}}),e(n,{call:function(t,n,e){return new M(t,n,e)},killCall:function(t,n){var e=t,i=F.length;a(e,function(t,e){for(var a=i-1;a>=0;a--){var r=F[a];r.onEnd===e&&(F.splice(a,1),n&&r.onEnd&&r.onEnd.apply(r,r.onEndParams))}})},killAllCalls:function(t){if(!t)return void(F=[]);for(var n=F.length,e=n-1;e>=0;e--){var a=F.splice(e,1);t&&a.onEnd&&a.onEnd.apply(a,a.onEndParams)}},playCall:function(t){w(t,"play")},playAllCalls:function(){b("play")},pauseCall:function(t){w(t,"pause")},pauseAllCalls:function(){b("pause")}}),e(n,{path:function(t){T(t);for(var e,a=t.ease||n.Linear.None,i=t.step||1,r=[],o=0;i>=o;o++){e=a(o/i);var s={};for(var u in t)t[u]instanceof Array&&(s[u]=t.interpolation(t[u],e));r.push(s)}return r}});var Z={Linear:function(t,n,e){return(n-t)*e+t},Bernstein:function(t,n){var e=Z.Factorial;return e(t)/e(n)/e(t-n)},Factorial:function(){var t=[1];return function(n){var e,a=1;if(t[n])return t[n];for(e=n;e>1;e--)a*=e;return t[n]=a}}(),Through:function(t,n,e,a,i){var r=.5*(e-t),o=.5*(a-n),s=i*i,u=i*s;return(2*n-2*e+r+o)*u+(-3*n+3*e-2*r-o)*s+r*i+n}};return e(n,{Linear:{None:function(t){return t}},Quad:{In:function(t){return t*t},Out:function(t){return t*(2-t)},InOut:function(t){return(t*=2)<1?.5*t*t:-.5*(--t*(t-2)-1)}},Cubic:{In:function(t){return t*t*t},Out:function(t){return--t*t*t+1},InOut:function(t){return(t*=2)<1?.5*t*t*t:.5*((t-=2)*t*t+2)}},Quart:{In:function(t){return t*t*t*t},Out:function(t){return 1- --t*t*t*t},InOut:function(t){return(t*=2)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)}},Quint:{In:function(t){return t*t*t*t*t},Out:function(t){return--t*t*t*t*t+1},InOut:function(t){return(t*=2)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)}},Sine:{In:function(t){return 1-Math.cos(t*Math.PI/2)},Out:function(t){return Math.sin(t*Math.PI/2)},InOut:function(t){return.5*(1-Math.cos(Math.PI*t))}},Expo:{In:function(t){return 0===t?0:Math.pow(1024,t-1)},Out:function(t){return 1===t?1:1-Math.pow(2,-10*t)},InOut:function(t){return 0===t?0:1===t?1:(t*=2)<1?.5*Math.pow(1024,t-1):.5*(-Math.pow(2,-10*(t-1))+2)}},Circ:{In:function(t){return 1-Math.sqrt(1-t*t)},Out:function(t){return Math.sqrt(1- --t*t)},InOut:function(t){return(t*=2)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)}},Elastic:{In:function(t){var n,e=.1,a=.4;return 0===t?0:1===t?1:(!e||1>e?(e=1,n=a/4):n=a*Math.asin(1/e)/(2*Math.PI),-(e*Math.pow(2,10*(t-=1))*Math.sin(2*(t-n)*Math.PI/a)))},Out:function(t){var n,e=.1,a=.4;return 0===t?0:1===t?1:(!e||1>e?(e=1,n=a/4):n=a*Math.asin(1/e)/(2*Math.PI),e*Math.pow(2,-10*t)*Math.sin(2*(t-n)*Math.PI/a)+1)},InOut:function(t){var n,e=.1,a=.4;return 0===t?0:1===t?1:(!e||1>e?(e=1,n=a/4):n=a*Math.asin(1/e)/(2*Math.PI),(t*=2)<1?-.5*e*Math.pow(2,10*(t-=1))*Math.sin(2*(t-n)*Math.PI/a):e*Math.pow(2,-10*(t-=1))*Math.sin(2*(t-n)*Math.PI/a)*.5+1)}},Back:{In:function(t){var n=1.70158;return t*t*((n+1)*t-n)},Out:function(t){var n=1.70158;return--t*t*((n+1)*t+n)+1},InOut:function(t){var n=2.5949095;return(t*=2)<1?.5*t*t*((n+1)*t-n):.5*((t-=2)*t*((n+1)*t+n)+2)}},Bounce:{In:function(t){return 1-n.Bounce.Out(1-t)},Out:function(t){return 1/2.75>t?7.5625*t*t:2/2.75>t?7.5625*(t-=1.5/2.75)*t+.75:2.5/2.75>t?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},InOut:function(t){return.5>t?.5*n.Bounce.In(2*t):.5*n.Bounce.Out(2*t-1)+.5}}}),n.now=R,n});
//touchjs http://cloudajs.org/docs/step4_API_Documentation#h2_7
var touch = touch || {}; (function (doc, exports) {
var os = (function () { var navigator = window.navigator, userAgent = navigator.userAgent, android = userAgent.match(/(Android)[\s\/]+([\d\.]+)/), ios = userAgent.match(/(iPad|iPhone|iPod)\s+OS\s([\d_\.]+)/), wp = userAgent.match(/(Windows\s+Phone)\s([\d\.]+)/), isWebkit = /WebKit\/[\d.]+/i.test(userAgent), isSafari = ios ? (navigator.standalone ? isWebkit : (/Safari/i.test(userAgent) && !/CriOS/i.test(userAgent) && !/MQQBrowser/i.test(userAgent))) : false, os = {}; if (android) { os.android = true; os.version = android[2] } if (ios) { os.ios = true; os.version = ios[2].replace(/_/g, "."); os.ios7 = /^7/.test(os.version); if (ios[1] === "iPad") { os.ipad = true } else { if (ios[1] === "iPhone") { os.iphone = true; os.iphone5 = screen.height == 568 } else { if (ios[1] === "iPod") { os.ipod = true } } } } if (wp) { os.wp = true; os.version = wp[2]; os.wp8 = /^8/.test(os.version) } if (isWebkit) { os.webkit = true } if (isSafari) { os.safari = true } return os })(); var PCevts = { "touchstart": "mousedown", "touchmove": "mousemove", "touchend": "mouseup", "touchcancel": "mouseout" }; var utils = { getType: function (obj) { return Object.prototype.toString.call(obj).match(/\s([a-z|A-Z]+)/)[1].toLowerCase() }, getSelector: function (el) { if (el.id) { return "#" + el.id } if (el.className) { var cns = el.className.split(/\s+/); return "." + cns.join(".") } else { return el.tagName.toLowerCase() } }, matchSelector: function (target, selector) { return target.webkitMatchesSelector(selector) }, getEventListeners: function (el) { return el.listeners }, getPCevts: function (evt) { return PCevts[evt] || evt }, forceReflow: function () { var domTreeOpDiv = document.getElementById("domTreeOp"); if (!domTreeOpDiv) { domTreeOpDiv = document.createElement("div"); domTreeOpDiv.id = "domTreeOp"; document.body.appendChild(domTreeOpDiv) } var parentNode = domTreeOpDiv.parentNode; var nextSibling = domTreeOpDiv.nextSibling; parentNode.removeChild(domTreeOpDiv); parentNode.insertBefore(domTreeOpDiv, nextSibling) }, simpleClone: function (obj) { var temp; try { temp = JSON.parse(JSON.stringify(obj)) } catch (error) { temp = "" } return temp } }; var proxyid = 0; var proxies = []; var _trigger = function (el, evt, detail) { detail = detail || {}; var e, opt = { bubbles: true, cancelable: true, detail: detail }; if (typeof CustomEvent !== "undefined") { e = new CustomEvent(evt, opt); if (el) { el.dispatchEvent(e) } } else { e = document.createEvent("CustomEvent"); e.initCustomEvent(evt, true, true, detail); if (el) { el.dispatchEvent(e) } } }; var _bind = function (el, evt, handler) { el.listeners = el.listeners || {}; if (!el.listeners[evt]) { el.listeners[evt] = [handler] } else { el.listeners[evt].push(handler) } var proxy = function (e) { if (os.ios7) { utils.forceReflow() } e.originEvent = e; e.startRotate = function () { __rotation_single_finger = true }; for (var p in e.detail) { if (p !== "type") { e[p] = e.detail[p] } } handler.call(e.target, e) }; handler.proxy = handler.proxy || {}; if (!handler.proxy[evt]) { handler.proxy[evt] = [proxyid++] } else { handler.proxy[evt].push(proxyid++) } proxies.push(proxy); if (el.addEventListener) { el.addEventListener(evt, proxy, false) } }; var _unbind = function (el, evt, handler) { if (!handler) { var handlers = el.listeners[evt]; if (handlers && handlers.length) { handlers.forEach(function (handler) { el.removeEventListener(evt, handler, false) }) } } else { var proxyids = handler.proxy[evt]; if (proxyids && proxyids.length) { proxyids.forEach(function (proxyid) { if (el.removeEventListener) { el.removeEventListener(evt, proxies[proxyid], false) } }) } } }; var _delegate = function (el, evt, sel, handler) { var proxy = function (e) { var target; e.originEvent = e; e.startRotate = function () { __rotation_single_finger = true }; for (var p in e.detail) { if (p !== "type") { e[p] = e.detail[p] } } var integrateSelector = utils.getSelector(el) + " " + sel; var match = utils.matchSelector(e.target, integrateSelector); var ischild = utils.matchSelector(e.target, integrateSelector + " " + e.target.nodeName); if (!match && ischild) { if (os.ios7) { utils.forceReflow() } target = e.target; while (!utils.matchSelector(target, integrateSelector)) { target = target.parentNode } handler.call(target, e) } else { if (os.ios7) { utils.forceReflow() } if (match || ischild) { handler.call(e.target, e) } } }; handler.proxy = handler.proxy || {}; if (!handler.proxy[evt]) { handler.proxy[evt] = [proxyid++] } else { handler.proxy[evt].push(proxyid++) } proxies.push(proxy); el.listeners = el.listeners || {}; if (!el.listeners[evt]) { el.listeners[evt] = [proxy] } else { el.listeners[evt].push(proxy) } if (el.addEventListener) { el.addEventListener(evt, proxy, false) } }; var _undelegate = function (el, evt, sel, handler) { if (!handler) { var listeners = el.listeners[evt]; listeners.forEach(function (proxy) { el.removeEventListener(evt, proxy, false) }) } else { var proxyids = handler.proxy[evt]; if (proxyids.length) { proxyids.forEach(function (proxyid) { if (el.removeEventListener) { el.removeEventListener(evt, proxies[proxyid], false) } }) } } }; var config = { tap: true, doubleTap: true, tapMaxDistance: 10, hold: true, holdTime: 650, maxDoubleTapInterval: 300, swipe: true, swipeTime: 300, swipeMinDistance: 18, swipeFactor: 5, drag: true, pinch: true, minScaleRate: 0, minRotationAngle: 0 }; var _hasTouch = ("ontouchstart" in window); var smrEventList = { TOUCH_START: "touchstart", TOUCH_MOVE: "touchmove", TOUCH_END: "touchend", TOUCH_CANCEL: "touchcancel", MOUSE_DOWN: "mousedown", MOUSE_MOVE: "mousemove", MOUSE_UP: "mouseup", CLICK: "click", PINCH_START: "pinchstart", PINCH_END: "pinchend", PINCH: "pinch", PINCH_IN: "pinchin", PINCH_OUT: "pinchout", ROTATION_LEFT: "rotateleft", ROTATION_RIGHT: "rotateright", ROTATION: "rotate", SWIPE_START: "swipestart", SWIPING: "swiping", SWIPE_END: "swipeend", SWIPE_LEFT: "swipeleft", SWIPE_RIGHT: "swiperight", SWIPE_UP: "swipeup", SWIPE_DOWN: "swipedown", SWIPE: "swipe", DRAG: "drag", DRAGSTART: "dragstart", DRAGEND: "dragend", HOLD: "hold", TAP: "tap", DOUBLE_TAP: "doubletap" };
function getPosOfEvent(ev) { if (_hasTouch) { var posi = []; var src = null; for (var t = 0, len = ev.touches.length; t < len; t++) { src = ev.touches[t]; posi.push({ x: src.pageX, y: src.pageY }) } return posi } else { return [{ x: ev.pageX, y: ev.pageY }] } } function getDistance(pos1, pos2) { var x = pos2.x - pos1.x, y = pos2.y - pos1.y; return Math.sqrt((x * x) + (y * y)) } function getFingers(ev) { return ev.touches ? ev.touches.length : 1 } function calScale(pstart, pmove) { if (pstart.length >= 2 && pmove.length >= 2) { var disStart = getDistance(pstart[1], pstart[0]); var disEnd = getDistance(pmove[1], pmove[0]); return disEnd / disStart } return 1 } function getAngle(p1, p2) { return Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI } function _getAngle180(p1, p2) { var agl = Math.atan((p2.y - p1.y) * -1 / (p2.x - p1.x)) * (180 / Math.PI); return (agl < 0 ? (agl + 180) : agl) } function getDirectionFromAngle(agl) { var directions = { up: agl < -45 && agl > -135, down: agl >= 45 && agl < 135, left: agl >= 135 || agl <= -135, right: agl >= -45 && agl <= 45 }; for (var key in directions) { if (directions[key]) { return key } } return null } function preventDefault(ev) { ev.preventDefault(); ev.stopPropagation() } function getXYByElement(el) { var left = 0, top = 0; while (el.offsetParent) { left += el.offsetLeft; top += el.offsetTop; el = el.offsetParent } return { left: left, top: top } } function reset() { startEvent = moveEvent = endEvent = null; __tapped = __touchStart = startSwiping = startPinch = false; startDrag = false; pos = {}; __rotation_single_finger = false } function isTouchStart(ev) { return (ev.type === "touchstart" || ev.type === "mousedown") } function isTouchMove(ev) { return (ev.type === "touchmove" || ev.type === "mousemove") } function isTouchEnd(ev) { return (ev.type === "touchend" || ev.type === "mouseup" || ev.type === "touchcancel") } var pos = { start: null, move: null, end: null }; var startTime = 0; var fingers = 0; var startEvent = null; var moveEvent = null; var endEvent = null; var startSwiping = false; var startPinch = false; var startDrag = false; var __offset = {}; var __touchStart = false; var __holdTimer = null; var __tapped = false; var __lastTapEndTime = null; var __tapTimer = null; var __scale_last_rate = 1; var __rotation_single_finger = false; var __rotation_single_start = []; var __initial_angle = 0; var __rotation = 0; var __prev_tapped_end_time = 0; var __prev_tapped_pos = null; var gestures = {
    _getAngleDiff: function (currentPos) { var diff = parseInt(__initial_angle - _getAngle180(currentPos[0], currentPos[1]), 10); var count = 0; while (Math.abs(diff - __rotation) > 90 && count++ < 50) { if (__rotation < 0) { diff -= 180 } else { diff += 180 } } __rotation = parseInt(diff, 10); return __rotation }, pinch: function (ev) { var el = ev.target; if (config.pinch) { if (!__touchStart) { return } if (getFingers(ev) < 2) { if (!isTouchEnd(ev)) { return } } var scale = calScale(pos.start, pos.move); var rotation = this._getAngleDiff(pos.move); var eventObj = { type: "", originEvent: ev, scale: scale, rotation: rotation, direction: (rotation > 0 ? "right" : "left"), fingersCount: getFingers(ev) }; if (!startPinch) { startPinch = true; eventObj.fingerStatus = "start"; _trigger(el, smrEventList.PINCH_START, eventObj) } else { if (isTouchMove(ev)) { eventObj.fingerStatus = "move"; _trigger(el, smrEventList.PINCH, eventObj) } else { if (isTouchEnd(ev)) { eventObj.fingerStatus = "end"; _trigger(el, smrEventList.PINCH_END, eventObj); reset() } } } if (Math.abs(1 - scale) > config.minScaleRate) { var scaleEv = utils.simpleClone(eventObj); var scale_diff = 1e-11; if (scale > __scale_last_rate) { __scale_last_rate = scale - scale_diff; _trigger(el, smrEventList.PINCH_OUT, scaleEv, false) } else { if (scale < __scale_last_rate) { __scale_last_rate = scale + scale_diff; _trigger(el, smrEventList.PINCH_IN, scaleEv, false) } } if (isTouchEnd(ev)) { __scale_last_rate = 1 } } if (Math.abs(rotation) > config.minRotationAngle) { var rotationEv = utils.simpleClone(eventObj), eventType; eventType = rotation > 0 ? smrEventList.ROTATION_RIGHT : smrEventList.ROTATION_LEFT; _trigger(el, eventType, rotationEv, false); _trigger(el, smrEventList.ROTATION, eventObj) } } }, rotateSingleFinger: function (ev) { var el = ev.target; if (__rotation_single_finger && getFingers(ev) < 2) { if (!pos.move) { return } if (__rotation_single_start.length < 2) { var docOff = getXYByElement(el); __rotation_single_start = [{ x: docOff.left + el.offsetWidth / 2, y: docOff.top + el.offsetHeight / 2 }, pos.move[0]]; __initial_angle = parseInt(_getAngle180(__rotation_single_start[0], __rotation_single_start[1]), 10) } var move = [__rotation_single_start[0], pos.move[0]]; var rotation = this._getAngleDiff(move); var eventObj = { type: "", originEvent: ev, rotation: rotation, direction: (rotation > 0 ? "right" : "left"), fingersCount: getFingers(ev) }; if (isTouchMove(ev)) { eventObj.fingerStatus = "move" } else { if (isTouchEnd(ev) || ev.type === "mouseout") { eventObj.fingerStatus = "end"; _trigger(el, smrEventList.PINCH_END, eventObj); reset() } } var eventType = rotation > 0 ? smrEventList.ROTATION_RIGHT : smrEventList.ROTATION_LEFT; _trigger(el, eventType, eventObj); _trigger(el, smrEventList.ROTATION, eventObj) } }, swipe: function (ev) {
        var el = ev.target; if (!__touchStart || !pos.move || getFingers(ev) > 1) { return } var now = Date.now(); var touchTime = now - startTime; var distance = getDistance(pos.start[0], pos.move[0]); var position = { x: pos.move[0].x - __offset.left, y: pos.move[0].y - __offset.top }; var angle = getAngle(pos.start[0], pos.move[0]); var direction = getDirectionFromAngle(angle); var touchSecond = touchTime / 1000; var factor = ((10 - config.swipeFactor) * 10 * touchSecond * touchSecond);
        var eventObj = { type: smrEventList.SWIPE, originEvent: ev, position: position, direction: direction, distance: distance, distanceX: pos.move[0].x - pos.start[0].x, distanceY: pos.move[0].y - pos.start[0].y, x: pos.move[0].x - pos.start[0].x, y: pos.move[0].y - pos.start[0].y, angle: angle, duration: touchTime, fingersCount: getFingers(ev), factor: factor }; if (config.swipe) { var swipeTo = function () { var elt = smrEventList; switch (direction) { case "up": _trigger(el, elt.SWIPE_UP, eventObj); break; case "down": _trigger(el, elt.SWIPE_DOWN, eventObj); break; case "left": _trigger(el, elt.SWIPE_LEFT, eventObj); break; case "right": _trigger(el, elt.SWIPE_RIGHT, eventObj); break } }; if (!startSwiping) { eventObj.fingerStatus = eventObj.swipe = "start"; startSwiping = true; _trigger(el, smrEventList.SWIPE_START, eventObj) } else { if (isTouchMove(ev)) { eventObj.fingerStatus = eventObj.swipe = "move"; _trigger(el, smrEventList.SWIPING, eventObj); if (touchTime > config.swipeTime && touchTime < config.swipeTime + 50 && distance > config.swipeMinDistance) { swipeTo(); _trigger(el, smrEventList.SWIPE, eventObj, false) } } else { if (isTouchEnd(ev) || ev.type === "mouseout") { eventObj.fingerStatus = eventObj.swipe = "end"; _trigger(el, smrEventList.SWIPE_END, eventObj); if (config.swipeTime > touchTime && distance > config.swipeMinDistance) { swipeTo(); _trigger(el, smrEventList.SWIPE, eventObj, false) } } } } } if (config.drag) { if (!startDrag) { eventObj.fingerStatus = eventObj.swipe = "start"; startDrag = true; _trigger(el, smrEventList.DRAGSTART, eventObj) } else { if (isTouchMove(ev)) { eventObj.fingerStatus = eventObj.swipe = "move"; _trigger(el, smrEventList.DRAG, eventObj) } else { if (isTouchEnd(ev)) { eventObj.fingerStatus = eventObj.swipe = "end"; _trigger(el, smrEventList.DRAGEND, eventObj) } } } }
    }, tap: function (ev) { var el = ev.target; if (config.tap) { var now = Date.now(); var touchTime = now - startTime; var distance = getDistance(pos.start[0], pos.move ? pos.move[0] : pos.start[0]); clearTimeout(__holdTimer); var isDoubleTap = (function () { if (__prev_tapped_pos && config.doubleTap && (startTime - __prev_tapped_end_time) < config.maxDoubleTapInterval) { var doubleDis = getDistance(__prev_tapped_pos, pos.start[0]); if (doubleDis < 16) { return true } } return false })(); if (isDoubleTap) { clearTimeout(__tapTimer); _trigger(el, smrEventList.DOUBLE_TAP, { type: smrEventList.DOUBLE_TAP, originEvent: ev, position: pos.start[0] }); return } if (config.tapMaxDistance < distance) { return } if (config.holdTime > touchTime && getFingers(ev) <= 1) { __tapped = true; __prev_tapped_end_time = now; __prev_tapped_pos = pos.start[0]; __tapTimer = setTimeout(function () { _trigger(el, smrEventList.TAP, { type: smrEventList.TAP, originEvent: ev, fingersCount: getFingers(ev), position: __prev_tapped_pos }) }, 220) } } }, hold: function (ev) { var el = ev.target; if (config.hold) { clearTimeout(__holdTimer); __holdTimer = setTimeout(function () { if (!pos.start) { return } var distance = getDistance(pos.start[0], pos.move ? pos.move[0] : pos.start[0]); if (config.tapMaxDistance < distance) { return } if (!__tapped) { _trigger(el, "hold", { type: "hold", originEvent: ev, fingersCount: getFingers(ev), position: pos.start[0] }) } }, config.holdTime) } }
}; var handlerOriginEvent = function (ev) { var el = ev.target; switch (ev.type) { case "touchstart": case "mousedown": __rotation_single_start = []; __touchStart = true; if (!pos.start || pos.start.length < 2) { pos.start = getPosOfEvent(ev) } if (getFingers(ev) >= 2) { __initial_angle = parseInt(_getAngle180(pos.start[0], pos.start[1]), 10) } startTime = Date.now(); startEvent = ev; __offset = {}; var box = el.getBoundingClientRect(); var docEl = document.documentElement; __offset = { top: box.top + (window.pageYOffset || docEl.scrollTop) - (docEl.clientTop || 0), left: box.left + (window.pageXOffset || docEl.scrollLeft) - (docEl.clientLeft || 0) }; gestures.hold(ev); break; case "touchmove": case "mousemove": if (!__touchStart || !pos.start) { return } pos.move = getPosOfEvent(ev); if (getFingers(ev) >= 2) { gestures.pinch(ev) } else { if (__rotation_single_finger) { gestures.rotateSingleFinger(ev) } else { gestures.swipe(ev) } } break; case "touchend": case "touchcancel": case "mouseup": case "mouseout": if (!__touchStart) { return } endEvent = ev; if (startPinch) { gestures.pinch(ev) } else { if (__rotation_single_finger) { gestures.rotateSingleFinger(ev) } else { if (startSwiping) { gestures.swipe(ev) } else { gestures.tap(ev) } } } reset(); __initial_angle = 0; __rotation = 0; if (ev.touches && ev.touches.length === 1) { __touchStart = true; __rotation_single_finger = true } break } }; var _on = function () {
    var evts, handler, evtMap, sel, args = arguments; if (args.length < 2 || args > 4) { return console.error("unexpected arguments!") } var els = utils.getType(args[0]) === "string" ? doc.querySelectorAll(args[0]) : args[0]; els = els.length ? Array.prototype.slice.call(els) : [els]; if (args.length === 3 && utils.getType(args[1]) === "string") { evts = args[1].split(" "); handler = args[2]; evts.forEach(function (evt) { if (!_hasTouch) { evt = utils.getPCevts(evt) } els.forEach(function (el) { _bind(el, evt, handler) }) }); return } function evtMapDelegate(evt) { if (!_hasTouch) { evt = utils.getPCevts(evt) } els.forEach(function (el) { _delegate(el, evt, sel, evtMap[evt]) }) } if (args.length === 3 && utils.getType(args[1]) === "object") { evtMap = args[1]; sel = args[2]; for (var evt1 in evtMap) { evtMapDelegate(evt1) } return } function evtMapBind(evt) {
        if (!_hasTouch) { evt = utils.getPCevts(evt) } els.forEach(function (el) {
            _bind(el, evt, evtMap[evt])
        })
    } if (args.length === 2 && utils.getType(args[1]) === "object") { evtMap = args[1]; for (var evt2 in evtMap) { evtMapBind(evt2) } return } if (args.length === 4 && utils.getType(args[2]) === "object") { evts = args[1].split(" "); handler = args[3]; evts.forEach(function (evt) { if (!_hasTouch) { evt = utils.getPCevts(evt) } els.forEach(function (el) { _bind(el, evt, handler) }) }); return } if (args.length === 4) { var el = els[0]; evts = args[1].split(" "); sel = args[2]; handler = args[3]; evts.forEach(function (evt) { if (!_hasTouch) { evt = utils.getPCevts(evt) } _delegate(el, evt, sel, handler) }); return }
}; var _off = function () { var evts, handler; var args = arguments; if (args.length < 1 || args.length > 4) { return console.error("unexpected arguments!") } var els = utils.getType(args[0]) === "string" ? doc.querySelectorAll(args[0]) : args[0]; els = els.length ? Array.prototype.slice.call(els) : [els]; if (args.length === 1 || args.length === 2) { els.forEach(function (el) { evts = args[1] ? args[1].split(" ") : Object.keys(el.listeners); if (evts.length) { evts.forEach(function (evt) { if (!_hasTouch) { evt = utils.getPCevts(evt) } _unbind(el, evt); _undelegate(el, evt) }) } }); return } if (args.length === 3 && utils.getType(args[2]) === "function") { handler = args[2]; els.forEach(function (el) { evts = args[1].split(" "); evts.forEach(function (evt) { if (!_hasTouch) { evt = utils.getPCevts(evt) } _unbind(el, evt, handler) }) }); return } if (args.length === 3 && utils.getType(args[2]) === "string") { var sel = args[2]; els.forEach(function (el) { evts = args[1].split(" "); evts.forEach(function (evt) { if (!_hasTouch) { evt = utils.getPCevts(evt) } _undelegate(el, evt, sel) }) }); return } if (args.length === 4) { handler = args[3]; els.forEach(function (el) { evts = args[1].split(" "); evts.forEach(function (evt) { if (!_hasTouch) { evt = utils.getPCevts(evt) } _undelegate(el, evt, sel, handler) }) }); return } }; var _dispatch = function (el, evt, detail) { var args = arguments; if (!_hasTouch) { evt = utils.getPCevts(evt) } var els = utils.getType(args[0]) === "string" ? doc.querySelectorAll(args[0]) : args[0]; els = els.length ? Array.prototype.call(els) : [els]; els.forEach(function (el) { _trigger(el, evt, detail) }) }; function init() { var eventNames = _hasTouch ? "touchstart touchmove touchend touchcancel" : "mouseup mousedown mousemove mouseout"; _on(doc, eventNames, handlerOriginEvent) } init(); exports.on = _on; exports.off = _off; exports.bind = _on; exports.unbind = _off; exports.live = _on; exports.die = _off; exports.config = config; exports.trigger = _dispatch
})(document, touch);
